%{
/* Jonathan Buch CS210 hw4.l November 3rd, 2015 */
#define PosixFns
#include "ucode.tab.h"
int num_lines = 0;
extern char* yyfilename;
int yywrap();
%}

%%

\n						{++num_lines; }
(U[0-9]+\.[0-9]+\.00)				{return VERSIONSTAMP; }
([a-zA-Z][a-zA-Z0-9]*\.u1\-[0-9]+\-[0-9]+)	{return UCODESTAMP; }
([+-]?[1-9][0-9]*)				{return DECCONST; }
(,)						{return COMMA; }
"0"						{return DECCONST; }
(0[0-7]*)					{return OCTCONST; }
"^L"						{return CONTROL_L; }
"\x0c"						{return CONTROL_L; }
([+-]?[0-9]+\.?[0-9]*)				{return REALCONST; }
([+-]?[0-9]+\.?[0-9]*[eE][+-]?[0-9]*)		{return REALCONST; }
([a-zA-Z0-9/\\:\-]+\.[a-u]*)			{return FILENAME; }
(2r[01]+)					{return BASE2; }
(16r[0-9a-fA-F]+)				{return BASE16; }
(L[0-9]+)					{return LABEL; }
"proc"						{return Op_Proc; }
"declend"					{return Op_Declend; }
"end"						{return Op_End; }
"link"						{return Op_Link; }
"version"					{return Op_Version; }
"con"						{return Op_Con; }
"filen"						{return Op_Filen; }
"record"					{return Op_Record; }
"impl"						{return Op_Impl; }
"error"						{return Op_Error; }
"trace"						{return Op_Trace; }
"lab"						{return Op_Lab; }
"invocable"					{return Op_Invocable; }
"copyd"						{return Op_Copyd; }
"trapret"					{return Op_Trapret; }
"trapfail"					{return Op_Trapfail; }
"synt"						{return Op_Synt; }
"uid"						{return Op_Uid; }
"asgn"						{return Op_Asgn; }
"bang"						{return Op_Bang; }
"cat"						{return Op_Cat; }
"compl"						{return Op_Compl; }
"diff"						{return Op_Diff; }
"div"						{return Op_Div; }
"eqv"						{return Op_Eqv; }
"inter"						{return Op_Inter; }
"lconcat"					{return Op_Lconcat; }
"lexeq"						{return Op_Lexeq; }
"lexge"						{return Op_Lexge; }
"lexgt"						{return Op_Lexgt; }
"lexle"						{return Op_Lexle; }
"lexlt"						{return Op_Lexlt; }
"lexne"						{return Op_Lexne; }
"minus"						{return Op_Minus; }
"mod"						{return Op_Mod; }
"mult"						{return Op_Mult; }
"neg"						{return Op_Neg; }
"neqv"						{return Op_Neqv; }
"nonnull"					{return Op_Nonnull; }
"null"						{return Op_Null; }
"number"					{return Op_Number; }
"numeq"						{return Op_Numeq; }
"numge"						{return Op_Numge; }
"numgt"						{return Op_Numgt; }
"numle"						{return Op_Numle; }
"numlt"						{return Op_Numlt; }
"numne"						{return Op_Numne; }
"plus"						{return Op_Plus; }
"power"						{return Op_Power; }
"random"					{return Op_Random; }
"rasgn"						{return Op_Rasgn; }
"rcv"						{return Op_Rcv; }
"rcvbk"						{return Op_RcvBk; } 
"refresh"					{return Op_Refresh; }
"rswap"						{return Op_Rswap; }
"sect"						{return Op_Sect; }
"snd"						{return Op_Snd; }
"sndbk"						{return Op_SndBk; }
"size"						{return Op_Size; }
"subsc"						{return Op_Subsc; }
"swap"						{return Op_Swap; }
"tabmat"					{return Op_Tabmat; }
"toby"						{return Op_Toby; }
"unions"					{return Op_Unions; }
"value"						{return Op_Value; }
"bscan"						{return Op_Bscan; }
"ccase"						{return Op_Ccase; }
"chfail"					{return Op_Chfail; }
"coact"						{return Op_Coact; }
"cofail"					{return Op_Cofail; }
"coret"						{return Op_Coret; }
"create"					{return Op_Create; }
"cset"						{return Op_Cset; }
"dup"						{return Op_Dup; }
"efail"						{return Op_Efail; } 
"einit"						{return Op_EInit; }
"eret"						{return Op_Eret; }
"escan"						{return Op_Escan; }
"esusp"						{return Op_Esusp; }
"field"						{return Op_Field; }
"goto"						{return Op_Goto; }
"init"						{return Op_Init; }
"int"						{return Op_Int; }
"invoke"					{return Op_Invoke; }
"keywd"						{return Op_Keywd; }
"limit"						{return Op_Limit; }
"line"						{return Op_Line; }
"llist"						{return Op_Llist; }
"lsusp"						{return Op_Lsusp; }
"mark"						{return Op_Mark; }
"pfail"						{return Op_Pfail; }
"pnull"						{return Op_Pnull; }
"pop"						{return Op_Pop; }
"pret"						{return Op_Pret; }
"psusp"						{return Op_Psusp; }
"push1"						{return Op_Push1; }
"pushn1"					{return Op_Pushn1; }
"real"						{return Op_Real; }
"sdup"						{return Op_Sdup; }
"str"						{return Op_Str; }
"unmark"					{return Op_Unmark; }
"var"						{return Op_Var; }
"arg"						{return Op_Arg; }
"static"					{return Op_Static; }
"local"						{return Op_Local; }
"global"					{return Op_Global; }
"mark0"						{return Op_Mark0; }
"quit"						{return Op_Quit; }
"fquit"						{return Op_FQuit; }
"tally"						{return Op_Tally; }
"apply"						{return Op_Apply; }
"acset"						{return Op_Acset; }
"areal"						{return Op_Areal; }
"astr"						{return Op_Astr; }
"aglobal"					{return Op_Aglobal; }
"astatic"					{return Op_Astatic; }
"agoto"						{return Op_Agoto; }
"amark"						{return Op_Amark; }
"noop"						{return Op_Noop; }
"colm"						{return Op_Colm; }
"any"						{return Op_Any; }
"case"						{return	Op_Case; }
"endcase"					{return	Op_Endcase; }
"every"						{return	Op_Every; }
"endevery"					{return	Op_Endevery; }
"if"						{return Op_If; }
"endif"						{return Op_Endif; }
"ifelse"					{return Op_Ifelse; }
"endifelse"					{return	Op_Endifelse; }
"while"						{return	Op_While; }
"endwhile"					{return	Op_Endwhile; }
"repeat"					{return Op_Repeat; }
"endrepeat"					{return	Op_Endrepeat; }
"suspend"					{return	Op_Suspend; }
"endsuspend"					{return	Op_Endsuspend; }
"until"						{return	Op_Until; }
"enduntil"					{return	Op_Enduntil; }
"allocated"					{return Op_Allocated; }
"clock"						{return Op_Clock; }
"collections"					{return Op_Collections; }
"column"					{return Op_Column; }
"current"					{return Op_Current; }
"date"						{return Op_Date; }
"now"						{return Op_Now; }
"dateline"					{return Op_Dateline; }
"digits"					{return Op_Digits; }
"e"						{return Op_E; }
"errornumber"					{return Op_Errornumber; }
"errortext"					{return Op_Errortext; }
"errorvalue"					{return Op_Errorvalue; }
"errout"					{return Op_Errout; }
"fail"						{return Op_Fail; }
"eventcode"					{return Op_Eventcode; }
"eventsource"					{return Op_Eventsource; }
"eventvalue"					{return Op_Eventvalue; }
"features"					{return Op_Features; }
"file"						{return Op_File; }
"host"						{return Op_Host; }
"input"						{return Op_Input; }
"lcase"						{return Op_Lcase; }
"letters"					{return Op_Letters; }
"level"						{return Op_Level; }
"main"						{return Op_Main; }
"output"					{return Op_Output; }
"phi"						{return Op_Phi; }
"pi"						{return Op_Pi; }
"pick"						{return Op_Pick; }
"pos"						{return Op_Pos; }
"progname"					{return Op_Progname; }
"regions"					{return Op_Regions; }
"source"					{return Op_Source; }
"storage"					{return Op_Storage; }
"subject"					{return Op_Subject; }
"time"						{return Op_Time; }
"dump"						{return Op_Dump; }
"ucase"						{return Op_Ucase; }
"errno"						{return Op_Errno; }
"window"					{return Op_Window; }
"col"						{return Op_Col; }
"row"						{return Op_Row; }
"x"						{return Op_X; }
"y"						{return Op_Y; }
"interval"					{return Op_Interval; }
"control"					{return Op_Control; }
"shift"						{return Op_Shift; }
"meta"						{return Op_Meta; }
"lpress"					{return Op_Lpress; }
"mpress"					{return Op_Mpress; }
"rpress"					{return Op_Rpress; }
"lrelease"					{return Op_Lrelease; }
"mrelease"					{return Op_Mrelease; }
"rrelease"					{return Op_Rrelease; }
"ldrag"						{return Op_Ldrag; }
"mdrag"						{return Op_Mdrag; }
"rdrag"						{return Op_Rdrag; }
"resize"					{return Op_Resize; }
"ascii"						{return Op_Ascii; }


([a-zA-Z_][a-zA-Z0-9_]*)				{return IDENTIFIER; }
(#[.]*\n)
([ \t]*)
.						{printf("lex error %s:%d bad token at %s", yyfilename, num_lines, yytext); }

%%

int yywrap() {return 1; }
